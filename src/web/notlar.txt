API REQUESTLER RESULT<> SİSTEMİNE DÖNECEK BLOCKUI MANTIĞINDA LOADİNG OLAYI YAPILACAK [ + ]
ROUTER RESPONSELERİ TRYCATCH İLE RESULT<> OLACAK [ + ]

SCHEMELERDA DATA TUTULUYOR VE HEPSİDE AYNI ANDA DEĞİŞİYOR FİX [ + ]

ŞEMA YAPISI ŞEMA OLUŞTURMA VE KAYDETME OLACAK SONRASINDA İNDİRME ÖNCESİNDE SEMA SEÇİLECEK. [ ]

SEMA VİSUALİZER OLACAK BU ŞEMA OLUŞTURMA SIRASINDA ADAMIN KLASÖRÜ VARMIŞ GİBİ SİMÜLE EDİP ONA GÖSTERECEK. [ ]
SİMÜLE TEMP'DE ÖRNEK BİR KLASÖR OLUŞTURUP BU KLASÖR ÜSTÜNDEN WEBSOCKETLER İLE İŞLEYECEK [ + ]
Klasörde original ve sim iki klasör olacak. Her sim öncesi orj klasör sim klasöre dönüşecek [ + ]
SİMÜLE NE ZAMAN TRİGGIRLANCAĞI BELLİ DEĞİL
    - BİR BUTONA BASTIĞINDA YAPABİLİR (MANTIKLI) [ + ]
    - OTOMATİK OLARAK YAPABİLİR
        - ÖRNEK DELETE EKLENDİĞİNDE WEBSOCKET İLE DELETE EKLENİR VE KLASÖR İŞLENİR. DELETE İÇİNE BİR ŞEY YAZILIRKEN İÇİNDEKİ DATA WEBSOCKET İLE GÖNDERİR SADECE.


SOCKET INDEX.TS DEN AYRILIP FARKLI BİR DOSYA İÇİNDE CLASS YAPISINDA OLACAK [ + ]
API ROUTER İÇİNDE CLASS YAPISIDNA OLACAK VE CONST OLARAK SERVER'İ ALACAK [ + ]
HER SOCKET BAZLI DOSYA İNDİRME HAKKI VERİLECEK [ + ]
SOCKET BAĞLANTIYI KOPARIRKEN BU HAKLAR TEMİZLENECEK (LİSTDE TUTULCK) [ + ]

INDIRME SOCKETİ DEĞİŞİP GELİŞECEK [ ]
SOCKETE ERROR YAKALAMA GELECEK [ + ] 
download ASYNC OLACAK [ ]

UI TEMASI SCSS FARKLI BİR YERDE RENDER ALINIP SADECE CSS KULLANILACAK ! (DEVELOPMENT PERFORMANSINI ÇOK ETKLİYOR.) [ + ]
UI NAVIGATOR EKLENECEK ( SCHEMES / INDEX VE OPTİONS (?) OLACAK) [ + ]

INDIRME YAPISI YENİDEN KURGULANACAK, FİLE IDLER İLE BİRLİKTE SOCKET'E "title_disk_safe" parametresi ve gerekli olan parametlereler de gönderilecek. [ ]
SCHEME RENDERER TEKRAR GÖZDEN GEÇİRİLECEK İNDİRME SONRASI EXECUTE YAPISI DEĞİŞECEK VE GELİŞTİRİLECEK [ ]